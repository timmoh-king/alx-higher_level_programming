>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> type(my_list)
<class '1-my_list.MyList'>

>>> print(my_list)
[]

>>> my_list = MyList([1, 2, 3])
>>> print(my_list)
[1, 2, 3]

>>> my_list = MyList(None)
Traceback (most recent call last):
TypeError: 'NoneType' object is not iterable

>>> my_list = MyList([1, 2], [3, 4])
Traceback (most recent call last):
TypeError: list expected at most 1 argument, got 2

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> print(my_list)
[1, 2, 3]

>>> my_list = MyList([1, 2, 3])
>>> my_list[0] = 5
>>> print(my_list)
[5, 2, 3]

>>> my_list = MyList([1, 2, 3])
>>> my_list.remove(1)
>>> print(my_list)
[2, 3]

>>> my_list = MyList()
>>> print(my_list.print_sorted)
<bound method MyList.print_sorted of []>

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(4)
>>> my_list.append(3)
>>> print(my_list)
[1, 2, 4, 3]
>>> my_list.print_sorted()
[1, 2, 3, 4]

>>> my_list = MyList([1, "Black", "berton", 5])
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'str' and 'int'

>>> my_list = MyList()
>>> my_list.append("Brennan")
>>> my_list.append("Ann")
>>> my_list.append("Alex")
>>> my_list.append("Vicky")
>>> print(my_list)
['Brennan', 'Ann', 'Alex', 'Vicky']
>>> my_list.print_sorted()
['Alex', 'Ann', 'Brennan', 'Vicky']
